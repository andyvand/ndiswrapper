* Quickstart guide *
====================

Prerequisites
-------------
* You need a recent kernel (at least 2.6.0 or 2.4.23) with source. 
* Make sure there is a link to the source from the modules directory:
  '/lib/modules/<VERSION>/build' should be a link to the kernel
  source, where <VERSION> is the version of the kernel you are running.
* The driver has known problems with SMP and will not work reliably with
  it. This includes hyperthreading support, because it implies SMP.

Installation
============
There are two ways of installing ndsiwrapper. You can either use install.sh
script (step 1) or (if install.sh fails for some reason) install manually
following steps 2 and above.

1. Use install.sh script
------------------------
* Execute install.sh script in the ndiswrapper directory. This should create
  the driver and configure modules. However, this is not tested extensively,
  so this may not work for you.
  * If it works for you, ignore the steps below.
  * If it doesn't work for you, follow the steps below (and post a
    message to the mailing list describing why install.sh script failed).

2. Compile the driver
---------------------
Go to the driver directory and run:

   > make install

3. Compile the loader:
----------------------
Go to the utils directory and run (irrepsecitve of what kernel you are
running):

> make

This should produce a loadndisdriver executable. Copy loadndisdriver to
/usr/sbin.

4. Get the windows driver
-------------------------
Download the Windows XP drivers for your card and locate the .sys and
.inf files. Use parseinf to create config file from these.

> parseinf <inffile> <sysfile>

This creates /etc/ndiswrapper/config file.
   
5. Load the kernel module
-------------------------

Load the module:

   > modprobe ndiswrapper

This will configure wlan0 interface. If a different interface name is
desired, you can pass the if_name option (e.g., if_name="eth1") to the module.

6. Load the windows driver
--------------------------
From the ndiswrapper directory, run:

> /usr/sbin/loadndisdriver

If you get no error the driver should now be loaded and active. You
can verify this by checking system log (produced by 'dmesg'). If the
driver is loaded successfully, you should see a message:

wlan0: ndiswrapper ethernet device xx:xx:xx:xx:xx:xx

7. Configure interface
----------------------
Use iwconfig to configure wireless network interface. First, locate
the wireless interface:

> iwconfig

This will print the wireless interface (e.g., wlan0). In
the examples below wlan0 is used; replace wlan0 with the interface
reported by iwconfig above.

Set the operating mode of the interface according to your setup. In
most cases, it is Managed: 

> iwconfig wlan0 mode Managed

If you use encryption (WEP), set the key:

> iwconfig wlan0 key restricted XXXXXXXX

You can use 6 hex digits for 40-bit encryption or 10  hex digits for
128-bit encryption. You may need to use 'open' security mode instead
of 'restricted' depending on the setup of your AP (access point).

Set the network name:

> iwconfig wlan0 essid ESSID

Replace ESSID with the network name used by your AP.

Now, setup the network parameters for the interface wlan0. This varies
from distribution to distribution. Refer to your distribution's
documents on how to do this. Once this is done, you can use network
tools to bring up the network; e.g.,

> ifconfig wlan0 up

8. Auto loading of module
-------------------------
When you have a working setup you may want to automate the driver-loading

a) Create alias for the interface:

   alias wlan0 ndiswrapper

b) 
    For kernel 2.6:

   * Add this line to /etc/modprobe.conf:

        install ndiswrapper /sbin/modprobe --ignore-instasll ndiswrapper;/usr/sbin/loadndisdriver

     Fedora Core 1 (and probably Redhat 9) with kernel 2.6.0 seem to
     have a slight bug which cause ifup to not recoginize the install
     line in modprobe.conf. See 
     http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=110415
     for more info and a patch.

   For kernel 2.4:

   * Add this line to /etc/modules.conf:

     post-install ndiswrapper /usr/sbin/loadndisdriver

